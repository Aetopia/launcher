name: Launcher version bump
on:

  push:
    branches: [ "main"]


  workflow_dispatch:
jobs:
  windows-build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: setup git
      run: |
        git config --global user.name "Github Actions"
        git config --global user.email "actions@github.com"
    - name: update file version
      run: | 
        export new_version=$(grep -oP '(?<=AssemblyVersion\(")[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' WpfApp5/AssemblyInfo.cs | awk -F. -v OFS=. '{$3++; $4=0; print}')
        echo "New Version: $new_version"
        echo "version=$new_version" >> $GITHUB_ENV
        sed -i "s/\[assembly: AssemblyVersion(\"[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\")\]/[assembly: AssemblyVersion(\"$new_version\")]/" WpfApp5/AssemblyInfo.cs
    - name: push to origin
      run: | 
        git add WpfApp5/AssemblyInfo.cs
        git commit -m "Update file version"
        git push origin main
    - name: checkout cdn
      uses: actions/checkout@v4
      with:
        repository: 'flarialmc/newcdn'
        ref: 'main'
        token:  ${{secrets.ACTIONS_GITHUB_TOKEN}}
    - name: setup git config
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@example.com"
    - name: upload to newcdn
      
      run: |
          echo ${{ env.version }}
          export new_version="${{ env.version }}"
          
          contents="$(jq '.version = "'$new_version'"' launcher/launcherVersion.txt)" && \
          echo -E "${contents}" > launcher/launcherVersion.txt
          cat launcher/launcherVersion.txt
          git add launcher/launcherVersion.txt
          git commit -m "Bump launcher version"
          git push origin main
          
