name: Build release launcher and bump version

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  bump-version-number:

      runs-on: ubuntu-latest
      outputs:
        new_version: ${{ steps.update_version.outputs.new_version }}
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        - name: setup git
          run: |
            git config --global user.name "Github Actions"
            git config --global user.email "actions@github.com"
        - name: update file version
          id: update_version
          run: |
            #parsed string

            export old_version=$(cat WpfApp5/AssemblyInfo.cs|sed -n 's/.*\(\+\.\+\.\+\.\+\).*/\1/p')
            export new_version=$(cat WpfApp5/AssemblyInfo.cs | tail -n 2 | head -n 1 | sed -n 's/.*\(\+\.\+\.\+\.\+\).*/\1/p' |  awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{if(length($NF+1)>length($NF))$(NF-1)++; $NF=sprintf("%0*d", length($NF), ($NF+1)%(10^length($NF))); print}')
            echo $new_version
            echo "new_version=$new_version" >> $GITHUB_OUTPUT
            sed -i "s/$old_version/$new_version/g" WpfApp5/AssemblyInfo.cs

        - name: push to origin
          run: |
            git add WpfApp5/AssemblyInfo.cs
            git commit -m "Update file version"
            git push origin main

  deploy:
        needs: bump-version-number
        if: contains(github.event.head_commit.message, 'release:')
        runs-on: windows-latest
        permissions:
          packages: write
          contents: read

        steps:
          - uses: actions/checkout@v4

          - name: Setup dotnet
            uses: actions/setup-dotnet@v4
            with:
              global-json-file: WpfApp5/global.json

          - name: Add MSBuild to PATH
            uses: microsoft/setup-msbuild@v2

          - name: Build
            run: |
              cd WpfApp5
              msbuild -t:Restore Flarial.Launcher.csproj
              msbuild /m Flarial.Launcher.csproj
              cd D:\a\launcher\launcher\WpfApp5\bin\Debug\net481\win-x64
              ls

          - name: Checkout cdn repository
            uses: actions/checkout@v4
            with:
              repository: 'flarialmc/newcdn'
              ref: 'main'
              path: 'cdn'
              token: ${{secrets.ACTIONS_GITHUB_TOKEN}}

          - name: Setup git config for cdn
            working-directory: ./cdn
            run: |
              git config user.name "GitHub Actions Bot"
              git config user.email "actions@example.com"

          - name: Update launcher version in newcdn
            working-directory: ./cdn
            run: |
              echo "New version from bump job: ${{ needs.bump-version-number.outputs.new_version }}"
              export new_version="${{ needs.bump-version-number.outputs.new_version }}"

              contents="$(jq '.version = "'$new_version'"' launcher/launcherVersion.txt)" && \
              echo -E "${contents}" > launcher/launcherVersion.txt
              cat launcher/launcherVersion.txt
              git add launcher/launcherVersion.txt
              git commit -m "Bump launcher version to $new_version"
              git push origin main

          - name: Upload launcher executable to newcdn
            working-directory: ./cdn
            run: |
              cp D:/a/launcher/launcher/WpfApp5/bin/Debug/net481/win-x64/Flarial.Launcher.exe ./launcher/Flarial.Launcher.exe
              git add Launcher/Flarial.Launcher.exe
              git commit -m "Update launcher executable"
              git push origin main