<Application x:Class="Flarial.Launcher.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Flarial.Launcher"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
          BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
          CornerRadius="0" BorderThickness="1, 1, 1, 1" 
          Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
          CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
          Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
        Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
        HorizontalAlignment="Center" Fill="#444"
        VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
            ClickMode="Press" Focusable="False"
            IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
            Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                          HorizontalAlignment="Left" VerticalAlignment="Center"                              
                          Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                 IsReadOnly="{TemplateBinding IsReadOnly}"
                 Visibility="Hidden" Background="Transparent"
                 HorizontalAlignment="Left" VerticalAlignment="Center"
                 Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
               Focusable="False" AllowsTransparency="True"
               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
               PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                    CornerRadius="0" BorderThickness="1,1,1,1" 
                    BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="ToggleButton" x:Key="ToggleButton">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid Background="{TemplateBinding Property=Background}">
                                <Label Content="{TemplateBinding Property=Content}" Foreground="#FFFFFF" FontSize="14" FontFamily="Fonts/#Unbounded" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" Height="50"/>
                                <Grid.Clip>
                                    <RectangleGeometry Rect="0,0,130,45" RadiusX="12" RadiusY="12"/>
                                </Grid.Clip>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Background" Value="#3b3a3a"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Foreground" Value="#ffffff"/>
                <Setter Property="Height" Value="45"/>
                <Setter Property="Width" Value="130"/>
            </Style.Setters>

            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#d42932"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#8c2026"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}"
           x:Key="OptionsButtonTheme">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Grid Background="{TemplateBinding Property=Background}">
                                <Image Source="{TemplateBinding Property=Tag}" Width="22" Height="22" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0"/>
                                <Label Content="{TemplateBinding Property=Content}" Foreground="#FFFFFF" FontSize="14" FontFamily="Fonts/#Unbounded" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="50" Margin="32,0,0,0"/>
                                <Grid.Clip>
                                    <RectangleGeometry Rect="0,0,130,45" RadiusX="12" RadiusY="12"/>
                                </Grid.Clip>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Background" Value="#525252"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Style.Setters>

            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#d42932"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#8c2026"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}"
           x:Key="VersionRadioButton">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border CornerRadius="12" Width="195" Height="100" Margin="0,0,5,5">
                                <Image x:Name="VersionImage" RenderTransformOrigin="0.5,0.5" Width="195" Stretch="UniformToFill" Height="100" Source="{Binding Tag[0], RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Image.RenderTransform>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </Image.RenderTransform>
                                </Image>
                                <Border.Clip>
                                    <RectangleGeometry Rect="0,0,195,100" RadiusX="12" RadiusY="12"/>
                                </Border.Clip>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="VersionImage" Property="Image.Source" Value="{Binding Tag[1], RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.10" Duration="0:0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.10" Duration="0:0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1" Duration="0:0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1" Duration="0:0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Background" Value="#525252"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Style.Setters>
        </Style>

        <Style TargetType="Image" x:Key="ImageHover">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.10" Duration="0:0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <QuadraticEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.10" Duration="0:0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <QuadraticEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1" Duration="0:0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <QuadraticEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1" Duration="0:0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <QuadraticEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="SettingsBtn" TargetType="RadioButton">
            <Grid>
                <Image Source="Images/share.png" Width="15" Height="15" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0"/>
                <Grid.Clip>
                    <RectangleGeometry Rect="0,0,130,40" RadiusX="6" RadiusY="6"/>
                </Grid.Clip>
                <Grid.Background>
                    <SolidColorBrush x:Name="SettingsBtnBrush" Color="#525252"/>
                </Grid.Background>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="RadioButton.IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" To="#8c2026" Storyboard.TargetName="SettingsBtnBrush" Storyboard.TargetProperty="Color"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" To="#525252" Storyboard.TargetName="SettingsBtnBrush" Storyboard.TargetProperty="Color"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="RadioButton.IsChecked" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" To="#d42932" Storyboard.TargetName="SettingsBtnBrush" Storyboard.TargetProperty="Color"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="LoginButton" TargetType="Button">
            <Grid>
                <Image Source="Images/discord-mark-white.png" Width="25" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,0,0,0"/>
                <Label Content="Login with Discord" Foreground="#FFFFFF" FontSize="14" FontFamily="Fonts/#Unbounded" HorizontalAlignment="Right" VerticalAlignment="Center" Height="51.5" Margin="0,0,10,-25"/>
                <Grid.Clip>
                    <RectangleGeometry Rect="0,0,220,50" RadiusX="12" RadiusY="12"/>
                </Grid.Clip>
                <Grid.Background>
                    <SolidColorBrush x:Name="LoginButtonBrush" Color="#d42932"/>
                </Grid.Background>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" To="#8c2026" Storyboard.TargetName="LoginButtonBrush" Storyboard.TargetProperty="Color"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" To="#d42932" Storyboard.TargetName="LoginButtonBrush" Storyboard.TargetProperty="Color"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="CloseButton1" TargetType="Button">
            <Grid>
                <Image Source="Images/user.png" Width="19" Height="19" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,0,0,0"/>
                <Label Content="Guest" Foreground="#FFFFFF" FontSize="14" FontFamily="Fonts/#Unbounded" HorizontalAlignment="Right" VerticalAlignment="Center" Height="51.5" Margin="0,0,20,-25"/>
                <Grid.Clip>
                    <RectangleGeometry Rect="0,0,120,50" RadiusX="12" RadiusY="12"/>
                </Grid.Clip>
                <Grid.Background>
                    <SolidColorBrush x:Name="CloseButton1Brush" Color="#525252"/>
                </Grid.Background>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" To="#3b3a3a" Storyboard.TargetName="CloseButton1Brush" Storyboard.TargetProperty="Color"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" To="#525252" Storyboard.TargetName="CloseButton1Brush" Storyboard.TargetProperty="Color"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="OptionsButton" TargetType="Button">
            <Grid>
                <Image Source="Images/setting.png" Width="17" Height="17" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,0,0,0"/>
                <Label Content="Options" Foreground="#FFFFFF" FontSize="14" FontFamily="Fonts/#Unbounded" HorizontalAlignment="Right" VerticalAlignment="Center" Height="55" Margin="0,0,18.2,-27.2"/>
                <Grid.Clip>
                    <RectangleGeometry Rect="0,0,130,50" RadiusX="12" RadiusY="12"/>
                </Grid.Clip>
                <Grid.Background>
                    <SolidColorBrush x:Name="OptionsButtonBrush" Color="#525252"/>
                </Grid.Background>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" To="#3b3a3a" Storyboard.TargetName="OptionsButtonBrush" Storyboard.TargetProperty="Color"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" To="#525252" Storyboard.TargetName="OptionsButtonBrush" Storyboard.TargetProperty="Color"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="LaunchButton" TargetType="Button">
            <Grid>
                <Image Source="Images/share.png" Width="17" Height="17" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,0,0,0"/>
                <Label Content="Launch" Foreground="#FFFFFF" FontSize="14" FontFamily="Fonts/#Unbounded" HorizontalAlignment="Right" VerticalAlignment="Center" Height="55" Margin="0,0,19.5,-27.2"/>
                <Grid.Clip>
                    <RectangleGeometry Rect="0,0,130,50" RadiusX="12" RadiusY="12"/>
                </Grid.Clip>
                <Grid.Background>
                    <SolidColorBrush x:Name="LaunchButtonBrush" Color="#d42932"/>
                </Grid.Background>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" To="#8c2026" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" To="#d42932" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="LogoutButton" TargetType="Button">
            <Grid>
                <Label Content="Logout" Foreground="#FFFFFF" FontSize="14" FontFamily="Fonts/#Unbounded" HorizontalAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Center" Height="55" Margin="0,0,0,0"/>
                <Grid.Clip>
                    <RectangleGeometry Rect="0,0,130,45" RadiusX="12" RadiusY="12"/>
                </Grid.Clip>
                <Grid.Background>
                    <SolidColorBrush x:Name="LaunchButtonBrush" Color="#d42932"/>
                </Grid.Background>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" To="#8c2026" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" To="#d42932" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <ControlTemplate x:Key="LoginAmongButton" TargetType="Button">
            <Grid>
                <Label Content="Login" Foreground="#FFFFFF" FontSize="14" FontFamily="Fonts/#Unbounded" HorizontalAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Center" Height="55" Margin="0,0,0,0"/>
                <Grid.Clip>
                    <RectangleGeometry Rect="0,0,130,45" RadiusX="12" RadiusY="12"/>
                </Grid.Clip>
                <Grid.Background>
                    <SolidColorBrush x:Name="LaunchButtonBrush" Color="#d42932"/>
                </Grid.Background>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" To="#8c2026" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" To="#d42932" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Color x:Key="CloseNormal">#FFFFFF</Color>
        <Color x:Key="CloseMouseOver">#9e9e9e</Color>

        <ControlTemplate x:Key="CloseButton" TargetType="Button">
            <Grid Background="Transparent" Height="20" Width="20">
                <Border Height="20" Width="3" CornerRadius="1.5" RenderTransformOrigin="0.5,0.5">
                    <Border.Background>
                        <SolidColorBrush Color="{StaticResource CloseNormal}" x:Name="CloseBrush1"/>
                    </Border.Background>
                    <Border.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="45"/>
                        </TransformGroup>
                    </Border.RenderTransform>
                </Border>
                <Border Height="20" Width="3" CornerRadius="1.5" RenderTransformOrigin="0.5,0.5">
                    <Border.Background>
                        <SolidColorBrush Color="{StaticResource CloseNormal}" x:Name="CloseBrush2"/>
                    </Border.Background>
                    <Border.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="-45"/>
                        </TransformGroup>
                    </Border.RenderTransform>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CloseBrush1" Storyboard.TargetProperty="Color" To="{StaticResource CloseMouseOver}"/>
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CloseBrush2" Storyboard.TargetProperty="Color" To="{StaticResource CloseMouseOver}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CloseBrush1" Storyboard.TargetProperty="Color" To="{StaticResource CloseNormal}"/>
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CloseBrush2" Storyboard.TargetProperty="Color" To="{StaticResource CloseNormal}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>
</Application>