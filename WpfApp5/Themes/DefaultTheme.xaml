<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <!--Window Styles-->
        <ResourceDictionary>
            <Style x:Key="WindowStyle" TargetType="Window">
                <Setter Property="AllowsTransparency" Value="True"/>
                <Setter Property="Background" Value="#071214"/>
                <Setter Property="WindowStyle" Value="None"/>
                <Setter Property="Title" Value="Flarial Launcher"/>
                <Setter Property="Height" Value="400"/>
                <Setter Property="Width" Value="600"/>
                <Setter Property="ResizeMode" Value="NoResize"/>
                <Setter Property="Clip">
                    <Setter.Value>
                        <RectangleGeometry Rect="0,0,600,400" RadiusX="25" RadiusY="25"/>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MainPageStyle" TargetType="Grid">
                <Setter Property="Visibility" Value="Hidden"/>
            </Style>
            <Style x:Key="LoginPageStyle" TargetType="Grid">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Bottom"/>
                <Setter Property="Width" Value="600"/>
                <Setter Property="Height" Value="400"/>
                <Setter Property="Background" Value="#071214"/>
            </Style>
            <Style x:Key="OptionsPageStyle" TargetType="Grid">
                <Setter Property="Visibility" Value="Hidden"/>
                <Setter Property="Background" Value="#071214"/>
            </Style>
        </ResourceDictionary>
        <!--Version Page Styles-->
        <ResourceDictionary>
            <Style x:Key="test1" TargetType="RadioButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Grid>
                                <Image x:Name="VersionImage" Width="207.5" RenderTransformOrigin="0.5,0.5" Stretch="UniformToFill" Height="275" Source="{Binding Tag[0], RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Image.RenderTransform>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </Image.RenderTransform>
                                </Image>
                                <Grid Background="#000000" Opacity="0.5" x:Name="BackgroundGrid" HorizontalAlignment="Right" Width="207.5"/>
                                <Label x:Name="VersionLabel" Content="{Binding Tag[1], RelativeSource={RelativeSource TemplatedParent}}" FontSize="20" FontFamily="/Fonts/#Unbounded" VerticalAlignment="Center" HorizontalAlignment="Center" Height="50" Margin="0,-30,0,0">
                                    <Label.Foreground>
                                        <SolidColorBrush Color="#ffffff" x:Name="VersionBrush"/>
                                    </Label.Foreground>
                                </Label>
                                <Label x:Name="StatusLabel" Content="temp" FontSize="10" FontFamily="/Fonts/#Sofia Sans" VerticalAlignment="Center" HorizontalAlignment="Center" Height="50" Margin="0,20,0,0">
                                    <Label.Foreground>
                                        <SolidColorBrush Color="#ffffff" x:Name="StatusBrush"/>
                                    </Label.Foreground>
                                </Label>
                                <Grid.Clip>
                                    <RectangleGeometry Rect="0,0,207.5,275" x:Name="GridClip"/>
                                </Grid.Clip>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="StatusLabel" Property="Content" Value="Selected"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" To="0.0" Storyboard.TargetName="BackgroundGrid" Storyboard.TargetProperty="Opacity">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" To="0.5" Storyboard.TargetName="BackgroundGrid" Storyboard.TargetProperty="Opacity">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="StatusLabel" Property="Content" Value="Installed"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.10" Duration="0:0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.10" Duration="0:0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1" Duration="0:0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1" Duration="0:0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Cursor" Value="Hand"/>
            </Style>

            <Style x:Key="test2" TargetType="RadioButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Grid>
                                <Image x:Name="VersionImage" Width="207.5" RenderTransformOrigin="0.5,0.5" Stretch="UniformToFill" Height="275" Source="{Binding Tag[0], RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Image.RenderTransform>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </Image.RenderTransform>
                                </Image>
                                <Grid Background="#000000" Opacity="0.5" x:Name="BackgroundGrid" HorizontalAlignment="Right" Width="207.5"/>
                                <Label x:Name="VersionLabel" Content="{Binding Tag[1], RelativeSource={RelativeSource TemplatedParent}}" FontSize="20" FontFamily="/Fonts/#Unbounded" VerticalAlignment="Center" HorizontalAlignment="Center" Height="50" Margin="0,-30,0,0">
                                    <Label.Foreground>
                                        <SolidColorBrush Color="#7f7f7f" x:Name="VersionBrush"/>
                                    </Label.Foreground>
                                </Label>
                                <Label x:Name="StatusLabel" Content="Click to Install" FontSize="10" FontFamily="/Fonts/#Sofia Sans" VerticalAlignment="Center" HorizontalAlignment="Center" Height="50" Margin="0,20,0,0">
                                    <Label.Foreground>
                                        <SolidColorBrush Color="#7f7f7f" x:Name="StatusBrush"/>
                                    </Label.Foreground>
                                </Label>
                                <Grid.Clip>
                                    <RectangleGeometry Rect="0,0,207.5,275" x:Name="GridClip"/>
                                </Grid.Clip>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.10" Duration="0:0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.10" Duration="0:0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1" Duration="0:0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1" Duration="0:0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Cursor" Value="Hand"/>
            </Style>

            <Style x:Key="test3" TargetType="RadioButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Grid>
                                <Image x:Name="VersionImage" Width="207.5" RenderTransformOrigin="0.5,0.5" Stretch="UniformToFill" Height="275" Source="{Binding Tag[0], RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Image.RenderTransform>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </Image.RenderTransform>
                                </Image>
                                <Grid Background="#000000" Opacity="0.5" x:Name="BackgroundGrid" HorizontalAlignment="Right" Width="{TemplateBinding Property=Content}"/>
                                <Label x:Name="VersionLabel" Content="{Binding Tag[1], RelativeSource={RelativeSource TemplatedParent}}" FontSize="20" FontFamily="/Fonts/#Unbounded" VerticalAlignment="Center" HorizontalAlignment="Center" Height="50" Margin="0,-30,0,0">
                                    <Label.Foreground>
                                        <SolidColorBrush Color="#7f7f7f" x:Name="VersionBrush"/>
                                    </Label.Foreground>
                                </Label>
                                <Label x:Name="StatusLabel" Content="Installing" FontSize="10" FontFamily="/Fonts/#Sofia Sans" VerticalAlignment="Center" HorizontalAlignment="Center" Height="50" Margin="0,20,0,0">
                                    <Label.Foreground>
                                        <SolidColorBrush Color="#7f7f7f" x:Name="StatusBrush"/>
                                    </Label.Foreground>
                                </Label>
                                <Label x:Name="ProgressLabel" Content="{Binding Tag[2], RelativeSource={RelativeSource TemplatedParent}}" FontSize="10" FontFamily="/Fonts/#Sofia Sans" VerticalAlignment="Bottom" HorizontalAlignment="Center" Height="25" Margin="0,0,0,0">
                                    <Label.Foreground>
                                        <SolidColorBrush Color="#7f7f7f" x:Name="ProgressBrush"/>
                                    </Label.Foreground>
                                </Label>
                                <Grid.Clip>
                                    <RectangleGeometry Rect="0,0,207.5,275" x:Name="GridClip"/>
                                </Grid.Clip>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.3" To="415" Storyboard.TargetName="VersionImage" Storyboard.TargetProperty="Width"/>
                                                <RectAnimation Duration="0:0:0.3" To="0,0,415,275" Storyboard.TargetName="GridClip" Storyboard.TargetProperty="Rect"/>
                                                <ColorAnimation Duration="0:0:0.3" To="#ffffff" Storyboard.TargetName="VersionBrush" Storyboard.TargetProperty="Color"/>
                                                <ColorAnimation Duration="0:0:0.3" To="#ffffff" Storyboard.TargetName="StatusBrush" Storyboard.TargetProperty="Color"/>
                                                <ColorAnimation Duration="0:0:0.3" To="#ffffff" Storyboard.TargetName="ProgressBrush" Storyboard.TargetProperty="Color"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.10" Duration="0:0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.10" Duration="0:0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1" Duration="0:0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1" Duration="0:0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Cursor" Value="Hand"/>
            </Style>
        </ResourceDictionary>
        <!--Options Page Styles-->
        <ResourceDictionary>
            <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="ToggleButton" x:Key="ToggleButton">
                <Style.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Grid Background="{TemplateBinding Property=Background}">
                                    <Label Content="{TemplateBinding Property=Content}" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" Height="50"/>
                                    <Grid.Clip>
                                        <RectangleGeometry Rect="0,0,130,45" RadiusX="12" RadiusY="12"/>
                                    </Grid.Clip>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="Background" Value="#525252"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                    <Setter Property="Height" Value="45"/>
                    <Setter Property="Width" Value="130"/>
                </Style.Setters>

                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True"/>
                            <Condition Property="IsChecked" Value="True"/>
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter Property="Background" Value="#8c2026"/>
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True"/>
                            <Condition Property="IsChecked" Value="False"/>
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter Property="Background" Value="#3b3a3a"/>
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="False"/>
                            <Condition Property="IsChecked" Value="True"/>
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter Property="Background" Value="#d42932"/>
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="False"/>
                            <Condition Property="IsChecked" Value="False"/>
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter Property="Background" Value="#525252"/>
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}"
           x:Key="OptionsButtonTheme">
                <Style.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="RadioButton">
                                <Grid Background="{TemplateBinding Property=Background}">
                                    <Image Source="{TemplateBinding Property=Tag}" Width="22" Height="22" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0"/>
                                    <Label Content="{TemplateBinding Property=Content}" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="50" Margin="32,0,0,0"/>
                                    <Grid.Clip>
                                        <RectangleGeometry Rect="0,0,130,45" RadiusX="12" RadiusY="12"/>
                                    </Grid.Clip>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="Background" Value="#525252"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Style.Setters>

                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True"/>
                            <Condition Property="IsChecked" Value="True"/>
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter Property="Background" Value="#8c2026"/>
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True"/>
                            <Condition Property="IsChecked" Value="False"/>
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter Property="Background" Value="#3b3a3a"/>
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="False"/>
                            <Condition Property="IsChecked" Value="True"/>
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter Property="Background" Value="#d42932"/>
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="False"/>
                            <Condition Property="IsChecked" Value="False"/>
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter Property="Background" Value="#525252"/>
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            <ControlTemplate x:Key="LogoutButton" TargetType="Button">
                <Grid>
                    <Label Content="Logout" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" HorizontalAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Center" Height="55" Margin="0,0,0,0"/>
                    <Grid.Clip>
                        <RectangleGeometry Rect="0,0,130,45" RadiusX="12" RadiusY="12"/>
                    </Grid.Clip>
                    <Grid.Background>
                        <SolidColorBrush x:Name="LaunchButtonBrush" Color="#d42932"/>
                    </Grid.Background>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#8c2026" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#d42932" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="LoginAmongButton" TargetType="Button">
                <Grid>
                    <Label Content="Login" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" HorizontalAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Center" Height="55" Margin="0,0,0,0"/>
                    <Grid.Clip>
                        <RectangleGeometry Rect="0,0,130,45" RadiusX="12" RadiusY="12"/>
                    </Grid.Clip>
                    <Grid.Background>
                        <SolidColorBrush x:Name="LaunchButtonBrush" Color="#d42932"/>
                    </Grid.Background>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#8c2026" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#d42932" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="SaveConfigButton" TargetType="Button">
                <Grid>
                    <Label Content="Save" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" HorizontalAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Center" Height="55" Margin="0,0,0,0"/>
                    <Grid.Clip>
                        <RectangleGeometry Rect="0,0,130,45" RadiusX="12" RadiusY="12"/>
                    </Grid.Clip>
                    <Grid.Background>
                        <SolidColorBrush x:Name="LaunchButtonBrush" Color="#d42932"/>
                    </Grid.Background>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#8c2026" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#d42932" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
        <!--Dialog Box Styles-->
        <ResourceDictionary>
            <ControlTemplate x:Key="NoButton" TargetType="Button">
                <Grid>
                    <Label Content="No" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" HorizontalAlignment="Center" VerticalAlignment="Center" Height="30" Margin="0,0,0,0" VerticalContentAlignment="Center"/>
                    <Grid.Clip>
                        <RectangleGeometry Rect="0,0,90,30" RadiusX="10" RadiusY="10"/>
                    </Grid.Clip>
                    <Grid.Background>
                        <SolidColorBrush x:Name="OptionsButtonBrush" Color="#525252"/>
                    </Grid.Background>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#3b3a3a" Storyboard.TargetName="OptionsButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#525252" Storyboard.TargetName="OptionsButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="OkButton" TargetType="Button">
                <Grid>
                    <Label Content="Ok" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" HorizontalAlignment="Center" VerticalAlignment="Center" Height="30" Margin="0,0,0,0" VerticalContentAlignment="Center"/>
                    <Grid.Clip>
                        <RectangleGeometry Rect="0,0,90,30" RadiusX="10" RadiusY="10"/>
                    </Grid.Clip>
                    <Grid.Background>
                        <SolidColorBrush x:Name="OptionsButtonBrush" Color="#525252"/>
                    </Grid.Background>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#3b3a3a" Storyboard.TargetName="OptionsButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#525252" Storyboard.TargetName="OptionsButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="YesButton" TargetType="Button">
                <Grid>
                    <Label Content="Yes" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" HorizontalAlignment="Center" VerticalAlignment="Center" Height="30" Margin="0,0,0,0" VerticalContentAlignment="Center"/>
                    <Grid.Clip>
                        <RectangleGeometry Rect="0,0,90,30" RadiusX="10" RadiusY="10"/>
                    </Grid.Clip>
                    <Grid.Background>
                        <SolidColorBrush x:Name="LaunchButtonBrush" Color="#d42932"/>
                    </Grid.Background>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#8c2026" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#d42932" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
        <!--Login Page Styles-->
        <ResourceDictionary>
            <ControlTemplate x:Key="TextButtonHover" TargetType="Button">
                <Label Content="{TemplateBinding Property=Content}" FontSize="12" FontFamily="/Fonts/#Sofia Sans" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                    <Label.Background>
                        <SolidColorBrush Color="#525252" Opacity="0.0" x:Name="TextHoverBrush"/>
                    </Label.Background>
                    <Label.Foreground>
                        <SolidColorBrush Color="#525252" x:Name="TextHoverForeground"/>
                    </Label.Foreground>
                    <Label.Clip>
                        <RectangleGeometry Rect="0,0,135,25" RadiusX="12.5" RadiusY="12.5"/>
                    </Label.Clip>
                </Label>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="GhostWhite" Storyboard.TargetName="TextHoverForeground" Storyboard.TargetProperty="Color"/>
                                    <DoubleAnimation Duration="0:0:0.1" To="0.4" Storyboard.TargetName="TextHoverBrush" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#525252" Storyboard.TargetName="TextHoverForeground" Storyboard.TargetProperty="Color"/>
                                    <DoubleAnimation Duration="0:0:0.1" To="0.0" Storyboard.TargetName="TextHoverBrush" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="CloseButton1" TargetType="Button">
                <Grid>
                    <Image Source="/Images/user.png" Width="19" Height="19" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,0,0,0"/>
                    <Label Content="Guest" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" HorizontalAlignment="Right" VerticalAlignment="Center" Height="51.5" Margin="0,0,20,-25"/>
                    <Grid.Clip>
                        <RectangleGeometry Rect="0,0,120,50" RadiusX="12" RadiusY="12"/>
                    </Grid.Clip>
                    <Grid.Background>
                        <SolidColorBrush x:Name="CloseButton1Brush" Color="#525252"/>
                    </Grid.Background>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#3b3a3a" Storyboard.TargetName="CloseButton1Brush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#525252" Storyboard.TargetName="CloseButton1Brush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="LoginButton" TargetType="Button">
                <Grid>
                    <Image Source="/Images/discord-mark-white.png" Width="25" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,0,0,0"/>
                    <Label Content="Login with Discord" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" HorizontalAlignment="Right" VerticalAlignment="Center" Height="51.5" Margin="0,0,10,-25"/>
                    <Grid.Clip>
                        <RectangleGeometry Rect="0,0,220,50" RadiusX="12" RadiusY="12"/>
                    </Grid.Clip>
                    <Grid.Background>
                        <SolidColorBrush x:Name="LoginButtonBrush" Color="#d42932"/>
                    </Grid.Background>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#8c2026" Storyboard.TargetName="LoginButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#d42932" Storyboard.TargetName="LoginButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
        <!--Main Page Styles-->
        <ResourceDictionary>
            <Style x:Key="BackgroundImage" TargetType="Image">
                <Setter Property="Source" Value="/Images/background.png"/>
            </Style>
            
            <Style x:Key="IconImage" TargetType="Image">
                <Setter Property="Source" Value="/Images/icon.png"/>
                <Setter Property="Width" Value="45"/>
                <Setter Property="Height" Value="45"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Margin" Value="23,23.5,0,0"/>
            </Style>
            
            <Style x:Key="GreetingLabelStyle" TargetType="Label">
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="FontSize" Value="30"/>
                <Setter Property="FontFamily" Value="/Fonts/#Unbounded"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="Margin" Value="80,14,0,0"/>
            </Style>
            
            <Style x:Key="GreetingLabelStyle2" TargetType="Label">
                <Setter Property="Content" Value="Ready to play?"/>
                <Setter Property="Foreground" Value="#525252"/>
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="FontFamily" Value="/Fonts/#Unbounded"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="Margin" Value="80,49,0,0"/>
            </Style>
            
            <Style x:Key="VersionLabel" TargetType="Label">
                <Setter Property="Foreground" Value="#525252"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="FontFamily" Value="/Fonts/#Unbounded"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Margin" Value="70,45,0,0"/>
            </Style>

            <Style x:Key="UserPFPImage" TargetType="Image">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Width" Value="35"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="VerticalAlignment" Value="Bottom"/>
                <Setter Property="Margin" Value="20,0,0,20"/>
                <Setter Property="Source" Value="/Images/user.png"/>
                <Setter Property="Stretch" Value="Fill"/>
                <Setter Property="Clip">
                    <Setter.Value>
                        <RectangleGeometry Rect="0,0,35,35" RadiusX="20" RadiusY="20"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="LIALabel" TargetType="Label">
                <Setter Property="Content" Value="Logged in as"/>
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontFamily" Value="/Fonts/#Sofia Sans"/>
                <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Margin" Value="55,305,0,0"/>
            </Style>

            <Style x:Key="UsernameStackPanelStyle" TargetType="StackPanel">
                <Setter Property="Orientation" Value="Horizontal"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Margin" Value="55,345,0,0"/>
            </Style>

            <Style x:Key="UsernameLabelStyle" TargetType="Label">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Content" Value="Guest"/>
                <Setter Property="Foreground" Value="#fe4443"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontFamily" Value="/Fonts/#Sofia Sans"/>
                <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
            </Style>

            <Style x:Key="BetaTagStyle" TargetType="Border">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="BorderBrush" Value="#fe4443"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="10"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#fe4443" Opacity="0.4"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BetaTagLabelStyle" TargetType="Label">
                <Setter Property="Margin" Value="0,-2,0,0"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="FontFamily" Value="/Fonts/#Sofia Sans"/>
                <Setter Property="Content" Value="Beta"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <Style x:Key="MediaTagStyle" TargetType="Border">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="BorderBrush" Value="#19d0ec"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="10"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#19d0ec" Opacity="0.4"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MediaTagLabelStyle" TargetType="Label">
                <Setter Property="Margin" Value="0,-2,0,0"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="FontFamily" Value="/Fonts/#Sofia Sans"/>
                <Setter Property="Content" Value="Media"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <Style x:Key="DevTagStyle" TargetType="Border">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="BorderBrush" Value="#3498db"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="10"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#3498db" Opacity="0.4"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DevTagLabelStyle" TargetType="Label">
                <Setter Property="Margin" Value="0,-2,0,0"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="FontFamily" Value="/Fonts/#Sofia Sans"/>
                <Setter Property="Content" Value="Dev"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <Style x:Key="StaffTagStyle" TargetType="Border">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="BorderBrush" Value="#e67e22"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="10"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#e67e22" Opacity="0.4"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="StaffTagLabelStyle" TargetType="Label">
                <Setter Property="Margin" Value="0,-2,0,0"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="FontFamily" Value="/Fonts/#Sofia Sans"/>
                <Setter Property="Content" Value="Admin"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <Style x:Key="ModTagStyle" TargetType="Border">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="BorderBrush" Value="#0d837f"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="10"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#0d837f" Opacity="0.4"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ModTagLabelStyle" TargetType="Label">
                <Setter Property="Margin" Value="0,-2,0,0"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="FontFamily" Value="/Fonts/#Sofia Sans"/>
                <Setter Property="Content" Value="Mod"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <Style x:Key="ExecTagStyle" TargetType="Border">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="Width" Value="60"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="BorderBrush" Value="#e74c3c"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="10"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#e74c3c" Opacity="0.4"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ExecTagLabelStyle" TargetType="Label">
                <Setter Property="Margin" Value="0,-2,0,0"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="FontFamily" Value="/Fonts/#Sofia Sans"/>
                <Setter Property="Content" Value="Executive"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <ControlTemplate x:Key="OptionsButton" TargetType="Button">
                <Grid>
                    <Image Source="/Images/setting.png" Width="17" Height="17" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,0,0,0"/>
                    <Label Content="Options" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" HorizontalAlignment="Right" VerticalAlignment="Center" Height="55" Margin="0,0,18.2,-27.2"/>
                    <Grid.Clip>
                        <RectangleGeometry Rect="0,0,130,50" RadiusX="12" RadiusY="12"/>
                    </Grid.Clip>
                    <Grid.Background>
                        <SolidColorBrush x:Name="OptionsButtonBrush" Color="#525252"/>
                    </Grid.Background>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#3b3a3a" Storyboard.TargetName="OptionsButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#525252" Storyboard.TargetName="OptionsButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="LaunchButton" TargetType="Button">
                <Grid>
                    <Image Source="/Images/share.png" Width="17" Height="17" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,0,0,0"/>
                    <Label Content="Launch" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" HorizontalAlignment="Right" VerticalAlignment="Center" Height="55" Margin="0,0,19.5,-27.2"/>
                    <Grid.Clip>
                        <RectangleGeometry Rect="0,0,130,50" RadiusX="12" RadiusY="12"/>
                    </Grid.Clip>
                    <Grid.Background>
                        <SolidColorBrush x:Name="LaunchButtonBrush" Color="#d42932"/>
                    </Grid.Background>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#8c2026" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="#d42932" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Color x:Key="CloseNormal">#FFFFFF</Color>
            <Color x:Key="CloseMouseOver">#9e9e9e</Color>

            <Style x:Key="CloseButton" TargetType="Button">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Margin" Value="0,20,20,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid Background="Transparent" Height="20" Width="20">
                                <Border Height="20" Width="3" CornerRadius="1.5" RenderTransformOrigin="0.5,0.5">
                                    <Border.Background>
                                        <SolidColorBrush Color="{StaticResource CloseNormal}" x:Name="CloseBrush1"/>
                                    </Border.Background>
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="45"/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>
                                <Border Height="20" Width="3" CornerRadius="1.5" RenderTransformOrigin="0.5,0.5">
                                    <Border.Background>
                                        <SolidColorBrush Color="{StaticResource CloseNormal}" x:Name="CloseBrush2"/>
                                    </Border.Background>
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="-45"/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CloseBrush1" Storyboard.TargetProperty="Color" To="{StaticResource CloseMouseOver}"/>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CloseBrush2" Storyboard.TargetProperty="Color" To="{StaticResource CloseMouseOver}"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CloseBrush1" Storyboard.TargetProperty="Color" To="{StaticResource CloseNormal}"/>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CloseBrush2" Storyboard.TargetProperty="Color" To="{StaticResource CloseNormal}"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>