<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:System;assembly=mscorlib">


    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="ToggleButton" x:Key="ToggleButton">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Background="{TemplateBinding Property=Background}">
                            <Label Content="{TemplateBinding Property=Content}" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" Height="50"/>
                            <Grid.Clip>
                                <RectangleGeometry Rect="0,0,130,45" RadiusX="12" RadiusY="12"/>
                            </Grid.Clip>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="#525252"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Width" Value="130"/>
        </Style.Setters>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#8c2026"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#3b3a3a"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#d42932"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#525252"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="ToggleButton" x:Key="ToggleButton2">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="45"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.Clip>
                            <RectangleGeometry Rect="0,0,45,20" RadiusX="10" RadiusY="10"/>
                        </Grid.Clip>
                        <Grid.Background>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Color="#525252" Offset="0" x:Name="ToggleButtonGradientStop"/>
                            </LinearGradientBrush>
                        </Grid.Background>
                        <Grid Background="Black" Opacity="0.0" Name="OpacityGrid"/>
                        <Border x:Name="ToggleButtonCircle" Margin="4,0,0,0" HorizontalAlignment="Left" CornerRadius="6.25" Background="#ffffff" Width="12.5" Height="12.5"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" To="0.2" Storyboard.TargetName="OpacityGrid" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" To="0.0" Storyboard.TargetName="OpacityGrid" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.2" To="28,0,0,0" Storyboard.TargetName="ToggleButtonCircle" Storyboard.TargetProperty="Margin"/>
                                        <ColorAnimation Duration="0:0:0.2" To="#d42932" Storyboard.TargetName="ToggleButtonGradientStop" Storyboard.TargetProperty="Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" To="#525252" Storyboard.TargetName="ToggleButtonGradientStop" Storyboard.TargetProperty="Color"/>
                                        <ThicknessAnimation Duration="0:0:0.2" To="4,0,0,0" Storyboard.TargetName="ToggleButtonCircle" Storyboard.TargetProperty="Margin"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}"
           x:Key="OptionsButtonTheme">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid Background="{TemplateBinding Property=Background}">
                            <Image Source="{TemplateBinding Property=Tag}" Width="22" Height="22" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0"/>
                            <Label Content="{TemplateBinding Property=Content}" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="50" Margin="32,0,0,0"/>
                            <Grid.Clip>
                                <RectangleGeometry Rect="0,0,130,45" RadiusX="12" RadiusY="12"/>
                            </Grid.Clip>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="#525252"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style.Setters>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#8c2026"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#3b3a3a"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#d42932"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#525252"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}"
           x:Key="VersionRadioButton">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border CornerRadius="12" Width="195" Height="100" Margin="0,0,5,5">
                            <Image x:Name="VersionImage" RenderTransformOrigin="0.5,0.5" Width="195" Stretch="UniformToFill" Height="100" Source="{Binding Tag[0], RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Image.RenderTransform>
                            </Image>
                            <Border.Clip>
                                <RectangleGeometry Rect="0,0,195,100" RadiusX="12" RadiusY="12"/>
                            </Border.Clip>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="VersionImage" Property="Image.Source" Value="{Binding Tag[1], RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.10" Duration="0:0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.10" Duration="0:0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1" Duration="0:0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1" Duration="0:0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Width" Value="207.5"/>
            <Setter Property="Height" Value="275"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style.Setters>
    </Style>

    <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}"
           x:Key="VersionRadioButton2">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid>
                            <Image x:Name="VersionImage" Width="207.5" RenderTransformOrigin="0.5,0.5" Stretch="UniformToFill" Height="275" Source="{Binding Tag[0], RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Image.RenderTransform>
                            </Image>
                            <Grid Background="#000000" Opacity="0.5" x:Name="BackgroundGrid" HorizontalAlignment="Right" Width="{Binding Tag[4], RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Label x:Name="VersionLabel" Content="{Binding Tag[1], RelativeSource={RelativeSource TemplatedParent}}" FontSize="20" FontFamily="/Fonts/#Unbounded" VerticalAlignment="Center" HorizontalAlignment="Center" Height="50" Margin="0,-30,0,0">
                                <Label.Foreground>
                                    <SolidColorBrush Color="#7f7f7f" x:Name="VersionBrush"/>
                                </Label.Foreground>
                            </Label>
                            <Label x:Name="StatusLabel" Content="temp" FontSize="10" FontFamily="/Fonts/#Sofia Sans" VerticalAlignment="Center" HorizontalAlignment="Center" Height="50" Margin="0,20,0,0">
                                <Label.Foreground>
                                    <SolidColorBrush Color="#7f7f7f" x:Name="StatusBrush"/>
                                </Label.Foreground>
                            </Label>
                            <Label x:Name="ProgressLabel" Content="{Binding Tag[2], RelativeSource={RelativeSource TemplatedParent}}" Foreground="#ffffff" FontSize="10" FontFamily="/Fonts/#Sofia Sans" VerticalAlignment="Bottom" HorizontalAlignment="Center" Height="25" Margin="0,0,0,0"/>
                            <Grid.Clip>
                                <RectangleGeometry Rect="0,0,207.5,275" x:Name="GridClip"/>
                            </Grid.Clip>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Tag[3], RelativeSource={RelativeSource Self}}" Value="0">
                                <Setter TargetName="StatusLabel" Property="Content" Value="Click to Install"/>
                                <Setter TargetName="ProgressLabel" Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag[3], RelativeSource={RelativeSource Self}}" Value="1">
                                <Setter TargetName="StatusLabel" Property="Content" Value="Click to Select"/>
                                <Setter TargetName="ProgressLabel" Property="Visibility" Value="Hidden"/>

                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" To="#ffffff" Storyboard.TargetName="VersionBrush" Storyboard.TargetProperty="Color"/>
                                            <ColorAnimation Duration="0:0:0.2" To="#ffffff" Storyboard.TargetName="StatusBrush" Storyboard.TargetProperty="Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" To="#ffffff" Storyboard.TargetName="VersionBrush" Storyboard.TargetProperty="Color"/>
                                            <ColorAnimation Duration="0:0:0.2" To="#ffffff" Storyboard.TargetName="StatusBrush" Storyboard.TargetProperty="Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag[3], RelativeSource={RelativeSource Self}}" Value="3">
                                <Setter TargetName="StatusLabel" Property="Content" Value="Installing"/>
                                <Setter TargetName="ProgressLabel" Property="Visibility" Value="Visible"/>

                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" To="#ffffff" Storyboard.TargetName="VersionBrush" Storyboard.TargetProperty="Color"/>
                                            <ColorAnimation Duration="0:0:0.2" To="#ffffff" Storyboard.TargetName="StatusBrush" Storyboard.TargetProperty="Color"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="415" Storyboard.TargetName="VersionImage" Storyboard.TargetProperty="Width"/>
                                            <RectAnimation Duration="0:0:0.2" To="0,0,415,275" Storyboard.TargetName="GridClip" Storyboard.TargetProperty="Rect"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" To="#ffffff" Storyboard.TargetName="VersionBrush" Storyboard.TargetProperty="Color"/>
                                            <ColorAnimation Duration="0:0:0.2" To="#ffffff" Storyboard.TargetName="StatusBrush" Storyboard.TargetProperty="Color"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="207.5" Storyboard.TargetName="VersionImage" Storyboard.TargetProperty="Width"/>
                                            <RectAnimation Duration="0:0:0.2" To="0,0,207.5,275" Storyboard.TargetName="GridClip" Storyboard.TargetProperty="Rect"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True"/>
                                    <Condition Binding="{Binding Tag[3], RelativeSource={RelativeSource Self}}" Value="1"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="StatusLabel" Property="Content" Value="Selected"/>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetName="BackgroundGrid" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0.5" Storyboard.TargetName="BackgroundGrid" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.10" Duration="0:0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.10" Duration="0:0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1" Duration="0:0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                            Storyboard.TargetName="VersionImage"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1" Duration="0:0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style.Setters>
    </Style>

    <ControlTemplate x:Key="LogoutButton" TargetType="Button">
        <Grid>
            <Label Content="Logout" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" HorizontalAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Center" Height="55" Margin="0,0,0,0"/>
            <Grid.Clip>
                <RectangleGeometry Rect="0,0,130,45" RadiusX="12" RadiusY="12"/>
            </Grid.Clip>
            <Grid.Background>
                <SolidColorBrush x:Name="LaunchButtonBrush" Color="#d42932"/>
            </Grid.Background>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1" To="#8c2026" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1" To="#d42932" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="LoginAmongButton" TargetType="Button">
        <Grid>
            <Label Content="Login" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" HorizontalAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Center" Height="55" Margin="0,0,0,0"/>
            <Grid.Clip>
                <RectangleGeometry Rect="0,0,130,45" RadiusX="12" RadiusY="12"/>
            </Grid.Clip>
            <Grid.Background>
                <SolidColorBrush x:Name="LaunchButtonBrush" Color="#d42932"/>
            </Grid.Background>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1" To="#8c2026" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1" To="#d42932" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SaveConfigButton" TargetType="Button">
        <Grid>
            <Label Content="Save" Foreground="#FFFFFF" FontSize="14" FontFamily="/Fonts/#Unbounded" HorizontalAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Center" Height="55" Margin="0,0,0,0"/>
            <Grid.Clip>
                <RectangleGeometry Rect="0,0,130,45" RadiusX="12" RadiusY="12"/>
            </Grid.Clip>
            <Grid.Background>
                <SolidColorBrush x:Name="LaunchButtonBrush" Color="#d42932"/>
            </Grid.Background>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1" To="#8c2026" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1" To="#d42932" Storyboard.TargetName="LaunchButtonBrush" Storyboard.TargetProperty="Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>